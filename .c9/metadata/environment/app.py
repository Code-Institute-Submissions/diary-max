{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":[" "],"id":1218}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"remove","lines":[" "],"id":1219},{"start":{"row":67,"column":1},"end":{"row":68,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":[" "],"id":1220}],[{"start":{"row":67,"column":0},"end":{"row":67,"column":1},"action":"remove","lines":[" "],"id":1221}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"remove","lines":[" "],"id":1222}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":[" "],"id":1223}],[{"start":{"row":66,"column":0},"end":{"row":68,"column":38},"action":"remove","lines":["db.session.commit()","return redirect(url_for('add_task', id=recipe._id))"," return redirect(url_for('get_tasks'))"],"id":1224},{"start":{"row":63,"column":51},"end":{"row":65,"column":38},"action":"insert","lines":["db.session.commit()","return redirect(url_for('add_task', id=recipe._id))"," return redirect(url_for('get_tasks'))"]}],[{"start":{"row":63,"column":51},"end":{"row":64,"column":0},"action":"insert","lines":["",""],"id":1225},{"start":{"row":64,"column":0},"end":{"row":64,"column":8},"action":"insert","lines":["        "]},{"start":{"row":64,"column":8},"end":{"row":65,"column":0},"action":"insert","lines":["",""]},{"start":{"row":65,"column":0},"end":{"row":65,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":65,"column":4},"end":{"row":65,"column":8},"action":"remove","lines":["    "],"id":1226},{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":1},"action":"insert","lines":[" "],"id":1227}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":1},"action":"insert","lines":[" "],"id":1228}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":1},"action":"remove","lines":[" "],"id":1229}],[{"start":{"row":65,"column":0},"end":{"row":66,"column":0},"action":"insert","lines":["",""],"id":1230}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":1},"action":"insert","lines":[" "],"id":1231},{"start":{"row":66,"column":1},"end":{"row":66,"column":2},"action":"insert","lines":[" "]},{"start":{"row":66,"column":2},"end":{"row":66,"column":3},"action":"insert","lines":[" "]},{"start":{"row":66,"column":3},"end":{"row":66,"column":4},"action":"insert","lines":[" "]},{"start":{"row":66,"column":4},"end":{"row":66,"column":5},"action":"insert","lines":[" "]},{"start":{"row":66,"column":5},"end":{"row":66,"column":6},"action":"insert","lines":[" "]},{"start":{"row":66,"column":6},"end":{"row":66,"column":7},"action":"insert","lines":[" "]},{"start":{"row":66,"column":7},"end":{"row":66,"column":8},"action":"insert","lines":[" "]}],[{"start":{"row":66,"column":8},"end":{"row":66,"column":9},"action":"insert","lines":[" "],"id":1232}],[{"start":{"row":67,"column":0},"end":{"row":67,"column":1},"action":"insert","lines":[" "],"id":1233},{"start":{"row":67,"column":1},"end":{"row":67,"column":2},"action":"insert","lines":[" "]},{"start":{"row":67,"column":2},"end":{"row":67,"column":3},"action":"insert","lines":[" "]},{"start":{"row":67,"column":3},"end":{"row":67,"column":4},"action":"insert","lines":[" "]},{"start":{"row":67,"column":4},"end":{"row":67,"column":5},"action":"insert","lines":[" "]},{"start":{"row":67,"column":5},"end":{"row":67,"column":6},"action":"insert","lines":[" "]},{"start":{"row":67,"column":6},"end":{"row":67,"column":7},"action":"insert","lines":[" "]},{"start":{"row":67,"column":7},"end":{"row":67,"column":8},"action":"insert","lines":[" "]}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":[" "],"id":1234},{"start":{"row":68,"column":1},"end":{"row":68,"column":2},"action":"insert","lines":[" "]},{"start":{"row":68,"column":2},"end":{"row":68,"column":3},"action":"insert","lines":[" "]},{"start":{"row":68,"column":3},"end":{"row":68,"column":4},"action":"insert","lines":[" "]}],[{"start":{"row":69,"column":4},"end":{"row":69,"column":6},"action":"remove","lines":["})"],"id":1235}],[{"start":{"row":70,"column":4},"end":{"row":70,"column":5},"action":"insert","lines":["}"],"id":1236}],[{"start":{"row":70,"column":5},"end":{"row":70,"column":6},"action":"insert","lines":[")"],"id":1237}],[{"start":{"row":66,"column":8},"end":{"row":66,"column":9},"action":"remove","lines":[" "],"id":1238}],[{"start":{"row":66,"column":4},"end":{"row":66,"column":8},"action":"remove","lines":["    "],"id":1239}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"remove","lines":["    "],"id":1240}],[{"start":{"row":65,"column":0},"end":{"row":66,"column":19},"action":"remove","lines":["","db.session.commit()"],"id":1241},{"start":{"row":65,"column":0},"end":{"row":65,"column":51},"action":"insert","lines":["mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})"]}],[{"start":{"row":67,"column":1},"end":{"row":67,"column":42},"action":"remove","lines":["    return redirect(url_for('get_tasks'))"],"id":1242}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":1},"action":"insert","lines":[" "],"id":1243}],[{"start":{"row":65,"column":1},"end":{"row":65,"column":2},"action":"insert","lines":[" "],"id":1244}],[{"start":{"row":65,"column":2},"end":{"row":65,"column":3},"action":"insert","lines":[" "],"id":1245},{"start":{"row":65,"column":3},"end":{"row":65,"column":4},"action":"insert","lines":[" "]}],[{"start":{"row":65,"column":4},"end":{"row":65,"column":5},"action":"insert","lines":[" "],"id":1246}],[{"start":{"row":64,"column":4},"end":{"row":66,"column":60},"action":"remove","lines":["    ","     mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})","         return redirect(url_for('add_task', id=recipe._id))"],"id":1247},{"start":{"row":68,"column":0},"end":{"row":70,"column":60},"action":"insert","lines":["    ","     mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})","         return redirect(url_for('add_task', id=recipe._id))"]}],[{"start":{"row":67,"column":2},"end":{"row":67,"column":3},"action":"remove","lines":[" "],"id":1248},{"start":{"row":67,"column":1},"end":{"row":67,"column":2},"action":"remove","lines":[" "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":1},"action":"remove","lines":[" "]}],[{"start":{"row":69,"column":20},"end":{"row":69,"column":26},"action":"remove","lines":["remove"],"id":1249},{"start":{"row":69,"column":20},"end":{"row":69,"column":21},"action":"insert","lines":["e"]},{"start":{"row":69,"column":21},"end":{"row":69,"column":22},"action":"insert","lines":["d"]},{"start":{"row":69,"column":22},"end":{"row":69,"column":23},"action":"insert","lines":["i"]},{"start":{"row":69,"column":23},"end":{"row":69,"column":24},"action":"insert","lines":["t"]}],[{"start":{"row":69,"column":5},"end":{"row":69,"column":6},"action":"insert","lines":["="],"id":1250}],[{"start":{"row":69,"column":5},"end":{"row":69,"column":6},"action":"remove","lines":["="],"id":1251},{"start":{"row":69,"column":4},"end":{"row":69,"column":5},"action":"remove","lines":[" "]}],[{"start":{"row":70,"column":8},"end":{"row":70,"column":9},"action":"remove","lines":[" "],"id":1252},{"start":{"row":70,"column":4},"end":{"row":70,"column":8},"action":"remove","lines":["    "]},{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":70,"column":0},"end":{"row":70,"column":1},"action":"insert","lines":[" "],"id":1253},{"start":{"row":70,"column":1},"end":{"row":70,"column":2},"action":"insert","lines":[" "]}],[{"start":{"row":70,"column":2},"end":{"row":70,"column":3},"action":"insert","lines":[" "],"id":1254},{"start":{"row":70,"column":3},"end":{"row":70,"column":4},"action":"insert","lines":[" "]}],[{"start":{"row":70,"column":49},"end":{"row":70,"column":50},"action":"remove","lines":["."],"id":1255}],[{"start":{"row":45,"column":33},"end":{"row":45,"column":40},"action":"remove","lines":["ind_one"],"id":1256},{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"remove","lines":["f"]}],[{"start":{"row":45,"column":32},"end":{"row":45,"column":33},"action":"insert","lines":["e"],"id":1257},{"start":{"row":45,"column":33},"end":{"row":45,"column":34},"action":"insert","lines":["d"]},{"start":{"row":45,"column":34},"end":{"row":45,"column":35},"action":"insert","lines":["i"]},{"start":{"row":45,"column":35},"end":{"row":45,"column":36},"action":"insert","lines":["t"]}],[{"start":{"row":67,"column":3},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":1258},{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":68,"column":1},"end":{"row":79,"column":1},"action":"insert","lines":["db.collection.update(","   <query>,","   <update>,","   {","     upsert: <boolean>,","     multi: <boolean>,","     writeConcern: <document>,","     collation: <document>,","     arrayFilters: [ <filterdocument1>, ... ],","     hint:  <document|string>        // Available starting in MongoDB 4.2","   }",")"],"id":1259}],[{"start":{"row":81,"column":3},"end":{"row":82,"column":54},"action":"remove","lines":[" mongo.db.tasks.edit({'_id': ObjectId(recipe_id)})","    return redirect(url_for('add_task', id=recipe_id))"],"id":1260},{"start":{"row":65,"column":1},"end":{"row":66,"column":54},"action":"insert","lines":[" mongo.db.tasks.edit({'_id': ObjectId(recipe_id)})","    return redirect(url_for('add_task', id=recipe_id))"]}],[{"start":{"row":69,"column":1},"end":{"row":80,"column":1},"action":"remove","lines":["db.collection.update(","   <query>,","   <update>,","   {","     upsert: <boolean>,","     multi: <boolean>,","     writeConcern: <document>,","     collation: <document>,","     arrayFilters: [ <filterdocument1>, ... ],","     hint:  <document|string>        // Available starting in MongoDB 4.2","   }",")"],"id":1261}],[{"start":{"row":65,"column":18},"end":{"row":65,"column":21},"action":"remove","lines":["dit"],"id":1262},{"start":{"row":65,"column":17},"end":{"row":65,"column":18},"action":"remove","lines":["e"]}],[{"start":{"row":65,"column":17},"end":{"row":65,"column":18},"action":"insert","lines":["u"],"id":1263},{"start":{"row":65,"column":18},"end":{"row":65,"column":19},"action":"insert","lines":["p"]},{"start":{"row":65,"column":19},"end":{"row":65,"column":20},"action":"insert","lines":["d"]},{"start":{"row":65,"column":20},"end":{"row":65,"column":21},"action":"insert","lines":["a"]},{"start":{"row":65,"column":21},"end":{"row":65,"column":22},"action":"insert","lines":["y"]},{"start":{"row":65,"column":22},"end":{"row":65,"column":23},"action":"insert","lines":["t"]}],[{"start":{"row":65,"column":22},"end":{"row":65,"column":23},"action":"remove","lines":["t"],"id":1264},{"start":{"row":65,"column":21},"end":{"row":65,"column":22},"action":"remove","lines":["y"]}],[{"start":{"row":65,"column":21},"end":{"row":65,"column":22},"action":"insert","lines":["t"],"id":1265},{"start":{"row":65,"column":22},"end":{"row":65,"column":23},"action":"insert","lines":["e"]}],[{"start":{"row":65,"column":17},"end":{"row":65,"column":23},"action":"remove","lines":["update"],"id":1266},{"start":{"row":65,"column":17},"end":{"row":65,"column":23},"action":"insert","lines":["update"]}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":1},"action":"remove","lines":[" "],"id":1267}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":1},"action":"remove","lines":[" "],"id":1268}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"remove","lines":["    "],"id":1269}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":1},"action":"insert","lines":[" "],"id":1270}],[{"start":{"row":65,"column":1},"end":{"row":65,"column":2},"action":"insert","lines":[" "],"id":1271}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":1},"action":"insert","lines":[" "],"id":1272},{"start":{"row":66,"column":1},"end":{"row":66,"column":2},"action":"insert","lines":[" "]}],[{"start":{"row":65,"column":2},"end":{"row":65,"column":53},"action":"remove","lines":["mongo.db.tasks.update({'_id': ObjectId(recipe_id)})"],"id":1273}],[{"start":{"row":66,"column":2},"end":{"row":66,"column":52},"action":"remove","lines":["return redirect(url_for('add_task', id=recipe_id))"],"id":1274},{"start":{"row":69,"column":1},"end":{"row":69,"column":51},"action":"insert","lines":["return redirect(url_for('add_task', id=recipe_id))"]}],[{"start":{"row":69,"column":1},"end":{"row":69,"column":42},"action":"remove","lines":["return redirect(url_for('add_task', id=re"],"id":1275}],[{"start":{"row":69,"column":8},"end":{"row":69,"column":9},"action":"remove","lines":[")"],"id":1276},{"start":{"row":69,"column":7},"end":{"row":69,"column":8},"action":"remove","lines":["d"]},{"start":{"row":69,"column":6},"end":{"row":69,"column":7},"action":"remove","lines":["i"]},{"start":{"row":69,"column":5},"end":{"row":69,"column":6},"action":"remove","lines":["_"]},{"start":{"row":69,"column":4},"end":{"row":69,"column":5},"action":"remove","lines":["e"]}],[{"start":{"row":69,"column":4},"end":{"row":69,"column":5},"action":"remove","lines":[")"],"id":1277}],[{"start":{"row":69,"column":3},"end":{"row":69,"column":4},"action":"remove","lines":["p"],"id":1278},{"start":{"row":69,"column":2},"end":{"row":69,"column":3},"action":"remove","lines":["i"]},{"start":{"row":69,"column":1},"end":{"row":69,"column":2},"action":"remove","lines":["c"]}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"]= 'mongodb+srv://ayaanh221:missayaan221@myfirstcluster-lj4yz.mongodb.net/diary-max?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    ","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","                           ","@app.route('/task_recipe')","def task_recipe():","    return render_template(\"recipes.html\", tasks=mongo.db.tasks.find())","    ","","@app.route('/insert_task', methods=['POST'])","def insert_task():","   ","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","    ","    ","","","","@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.edit({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)","","   ","   ","@app.route('/update_task/<recipe_id>', methods=['GET','POST'])","def update_task(recipe_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(recipe_id)},","    {","       'recipe_name':request.form.get('recipe_name'),","        'photo_link':request.form.get('photo_link'),","        'cooking_time': request.form.get('cooking_time'),","        'ingredients': request.form.get('ingredients'),","        'method': request.form.get('method'),","        'due_date': request.form.get('due_date'),","        'vegetarian':request.form.get('vegetarian')","    ","  ","  ","    "," })"," ","    ","   ","","@app.route('/delete_task/<recipe_id>')","def delete_task(recipe_id):"," print(recipe_id, '===debug====')   "," mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})"," return redirect(url_for('get_tasks'))","    ","    ","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":1279},{"start":{"row":0,"column":0},"end":{"row":78,"column":12},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"]= 'mongodb+srv://ayaanh221:missayaan221@myfirstcluster-lj4yz.mongodb.net/diary-max?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    ","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","                           ","@app.route('/task_recipe')","def task_recipe():","    return render_template(\"recipes.html\", tasks=mongo.db.tasks.find())","    ","","@app.route('/insert_task', methods=['POST'])","def insert_task():","   ","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","    ","    ","","","","@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)","","   ","   ","@app.route('/update_task/<get_tasks>', methods=[\"POST\"])","def update_task(recipe_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(recipe_id)},","    {","       'recipe_name':request.form.get('recipe_name'),","        'photo_link':request.form.get('photo_link'),","        'cooking_time': request.form.get('cooking_time'),","        'ingredients': request.form.get('ingredients'),","        'method': request.form.get('method'),","        'due_date': request.form.get('due_date'),","        'vegetarian':request.form.get('vegetarian')","    })","    return redirect(url_for('get_tasks'))","","@app.route('/delete_task/<recipe_id>')","def delete_task(recipe_id):"," print(recipe_id, '===debug====')   "," mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})"," return redirect(url_for('get_tasks'))","    ","    ","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)","            "]}],[{"start":{"row":43,"column":24},"end":{"row":43,"column":31},"action":"remove","lines":["recipe_"],"id":1280}],[{"start":{"row":44,"column":14},"end":{"row":44,"column":21},"action":"remove","lines":["recipe_"],"id":1281}],[{"start":{"row":43,"column":24},"end":{"row":43,"column":31},"action":"insert","lines":["recipe_"],"id":1282}],[{"start":{"row":44,"column":14},"end":{"row":44,"column":20},"action":"insert","lines":["recipe"],"id":1283}],[{"start":{"row":44,"column":20},"end":{"row":44,"column":21},"action":"insert","lines":["_"],"id":1284}],[{"start":{"row":43,"column":1},"end":{"row":73,"column":4},"action":"remove","lines":["app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)","","   ","   ","@app.route('/update_task/<get_tasks>', methods=[\"POST\"])","def update_task(recipe_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(recipe_id)},","    {","       'recipe_name':request.form.get('recipe_name'),","        'photo_link':request.form.get('photo_link'),","        'cooking_time': request.form.get('cooking_time'),","        'ingredients': request.form.get('ingredients'),","        'method': request.form.get('method'),","        'due_date': request.form.get('due_date'),","        'vegetarian':request.form.get('vegetarian')","    })","    return redirect(url_for('get_tasks'))","","@app.route('/delete_task/<recipe_id>')","def delete_task(recipe_id):"," print(recipe_id, '===debug====')   "," mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})"," return redirect(url_for('get_tasks'))","    ","    "],"id":1285},{"start":{"row":43,"column":1},"end":{"row":82,"column":68},"action":"insert","lines":["@app.route('/edit_quantity/<id>')","@login_required","def edit_quantity(id):","        quantity = Quantity.query.get(id)","        quantity_recipe = Recipe.query.get(quantity.recipe_id)","        measurements_list = Measurement.query.limit(100).all()","        if quantity_recipe.user != current_user:","            flash('You do not have permission to edit this ingredient')","            return redirect(url_for('index'))","        return render_template('edit_quantity.html', quantity=quantity, measurements_list=measurements_list, recipe=quantity_recipe)","","@app.route('/update_quantity/<id>', methods = ['GET','POST'])","def update_quantity(id):","        quantity = Quantity.query.get(id)","        quantity_recipe = Recipe.query.get(quantity.recipe_id)","        measurements_list = Measurement.query.limit(100).all()","        ","        if request.method == 'POST':","            quantity = Quantity.query.get(id)","            quantity.quantity = request.form['quantity']","            quantity.recipe = quantity_recipe","            quantity.measurement = Measurement.query.filter_by(id=request.form['quantity_measurement']).first()","            quantity.ingredient.ingredient_name = request.form['quantity_ingredient']","","            db.session.commit()","            return redirect(url_for('recipe_detail', id=quantity_recipe.id))","        ","        return redirect(url_for('recipe_detail', id=quantity_recipe.id))","","@app.route('/delete_quantity/<id>')","@login_required","def delete_quantity(id):","    quantity = Quantity.query.get(id)","    quantity_recipe = Recipe.query.get(quantity.recipe_id)","    if quantity_recipe.user != current_user:","        flash('You do not have permission to delete this ingredient')","        return redirect(url_for('index'))","    db.session.delete(quantity)","    db.session.commit()","    return redirect(url_for('recipe_detail', id=quantity_recipe.id))"]}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":1},"action":"remove","lines":["@"],"id":1286}],[{"start":{"row":44,"column":0},"end":{"row":44,"column":15},"action":"remove","lines":["@login_required"],"id":1287}],[{"start":{"row":43,"column":18},"end":{"row":43,"column":26},"action":"remove","lines":["quantity"],"id":1288},{"start":{"row":43,"column":18},"end":{"row":43,"column":19},"action":"insert","lines":["r"]},{"start":{"row":43,"column":19},"end":{"row":43,"column":20},"action":"insert","lines":["e"]},{"start":{"row":43,"column":20},"end":{"row":43,"column":21},"action":"insert","lines":["c"]}],[{"start":{"row":43,"column":21},"end":{"row":43,"column":22},"action":"insert","lines":["i"],"id":1289},{"start":{"row":43,"column":22},"end":{"row":43,"column":23},"action":"insert","lines":["p"]},{"start":{"row":43,"column":23},"end":{"row":43,"column":24},"action":"insert","lines":["e"]}],[{"start":{"row":45,"column":9},"end":{"row":45,"column":17},"action":"remove","lines":["quantity"],"id":1290},{"start":{"row":45,"column":9},"end":{"row":45,"column":15},"action":"insert","lines":["recipe"]}],[{"start":{"row":46,"column":6},"end":{"row":46,"column":16},"action":"remove","lines":["  quantity"],"id":1291},{"start":{"row":46,"column":6},"end":{"row":46,"column":12},"action":"insert","lines":["recipe"]}],[{"start":{"row":47,"column":8},"end":{"row":47,"column":16},"action":"remove","lines":["quantity"],"id":1292},{"start":{"row":47,"column":8},"end":{"row":47,"column":14},"action":"insert","lines":["recipe"]}],[{"start":{"row":47,"column":15},"end":{"row":47,"column":16},"action":"insert","lines":["."],"id":1293}],[{"start":{"row":47,"column":15},"end":{"row":47,"column":16},"action":"remove","lines":["."],"id":1294},{"start":{"row":47,"column":14},"end":{"row":47,"column":15},"action":"insert","lines":["."]}],[{"start":{"row":47,"column":14},"end":{"row":47,"column":15},"action":"remove","lines":["."],"id":1295}],[{"start":{"row":46,"column":6},"end":{"row":46,"column":7},"action":"insert","lines":["e"],"id":1296},{"start":{"row":46,"column":7},"end":{"row":46,"column":8},"action":"insert","lines":["d"]},{"start":{"row":46,"column":8},"end":{"row":46,"column":9},"action":"insert","lines":["i"]},{"start":{"row":46,"column":9},"end":{"row":46,"column":10},"action":"insert","lines":["t"]}],[{"start":{"row":46,"column":6},"end":{"row":46,"column":10},"action":"remove","lines":["edit"],"id":1297},{"start":{"row":46,"column":6},"end":{"row":46,"column":19},"action":"insert","lines":["edit_recipe()"]}],[{"start":{"row":46,"column":17},"end":{"row":46,"column":25},"action":"remove","lines":["()recipe"],"id":1298}],[{"start":{"row":47,"column":8},"end":{"row":47,"column":9},"action":"insert","lines":["e"],"id":1299},{"start":{"row":47,"column":9},"end":{"row":47,"column":10},"action":"insert","lines":["d"]},{"start":{"row":47,"column":10},"end":{"row":47,"column":11},"action":"insert","lines":["i"]},{"start":{"row":47,"column":11},"end":{"row":47,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":47,"column":8},"end":{"row":47,"column":12},"action":"remove","lines":["edit"],"id":1300},{"start":{"row":47,"column":8},"end":{"row":47,"column":21},"action":"insert","lines":["edit_recipe()"]}],[{"start":{"row":47,"column":19},"end":{"row":47,"column":27},"action":"remove","lines":["()recipe"],"id":1301}],[{"start":{"row":0,"column":0},"end":{"row":87,"column":12},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"]= 'mongodb+srv://ayaanh221:missayaan221@myfirstcluster-lj4yz.mongodb.net/diary-max?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    ","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","                           ","@app.route('/task_recipe')","def task_recipe():","    return render_template(\"recipes.html\", tasks=mongo.db.tasks.find())","    ","","@app.route('/insert_task', methods=['POST'])","def insert_task():","   ","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","    ","    ","","","","@app.route('/edit_recipe/<id>')","","def edit_recipe(id):","      edit_recipe = Quantity.query.get(id)","        edit_recipe_recipe = Recipe.query.get(quantity.recipe_id)","        measurements_list = Measurement.query.limit(100).all()","        if quantity_recipe.user != current_user:","            flash('You do not have permission to edit this ingredient')","            return redirect(url_for('index'))","        return render_template('edit_quantity.html', quantity=quantity, measurements_list=measurements_list, recipe=quantity_recipe)","","@app.route('/update_quantity/<id>', methods = ['GET','POST'])","def update_quantity(id):","        quantity = Quantity.query.get(id)","        quantity_recipe = Recipe.query.get(quantity.recipe_id)","        measurements_list = Measurement.query.limit(100).all()","        ","        if request.method == 'POST':","            quantity = Quantity.query.get(id)","            quantity.quantity = request.form['quantity']","            quantity.recipe = quantity_recipe","            quantity.measurement = Measurement.query.filter_by(id=request.form['quantity_measurement']).first()","            quantity.ingredient.ingredient_name = request.form['quantity_ingredient']","","            db.session.commit()","            return redirect(url_for('recipe_detail', id=quantity_recipe.id))","        ","        return redirect(url_for('recipe_detail', id=quantity_recipe.id))","","@app.route('/delete_quantity/<id>')","@login_required","def delete_quantity(id):","    quantity = Quantity.query.get(id)","    quantity_recipe = Recipe.query.get(quantity.recipe_id)","    if quantity_recipe.user != current_user:","        flash('You do not have permission to delete this ingredient')","        return redirect(url_for('index'))","    db.session.delete(quantity)","    db.session.commit()","    return redirect(url_for('recipe_detail', id=quantity_recipe.id))","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)","            "],"id":1302},{"start":{"row":0,"column":0},"end":{"row":77,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"]= 'mongodb+srv://ayaanh221:missayaan221@myfirstcluster-lj4yz.mongodb.net/diary-max?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    ","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","                           ","@app.route('/task_recipe')","def task_recipe():","    return render_template(\"recipes.html\", tasks=mongo.db.tasks.find())","    ","","@app.route('/insert_task', methods=['POST'])","def insert_task():","   ","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","    ","    ","","","","@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)","","   ","   ","@app.route('/update_task/<get_tasks>', methods=[\"POST\"])","def update_task(recipe_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(recipe_id)},","    {","       'recipe_name':request.form.get('recipe_name'),","        'photo_link':request.form.get('photo_link'),","        'cooking_time': request.form.get('cooking_time'),","        'ingredients': request.form.get('ingredients'),","        'method': request.form.get('method'),","        'due_date': request.form.get('due_date'),","        'vegetarian':request.form.get('vegetarian')","    })","    return redirect(url_for('get_tasks'))","","@app.route('/delete_task/<recipe_id>')","def delete_task(recipe_id):"," print(recipe_id, '===debug====')   "," mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})"," return redirect(url_for('get_tasks'))","    ","    ","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":44,"column":4},"end":{"row":44,"column":13},"action":"remove","lines":["edit_task"],"id":1303},{"start":{"row":44,"column":4},"end":{"row":44,"column":14},"action":"insert","lines":["the_recipe"]}],[{"start":{"row":44,"column":4},"end":{"row":44,"column":14},"action":"remove","lines":["the_recipe"],"id":1304},{"start":{"row":44,"column":4},"end":{"row":44,"column":5},"action":"insert","lines":["e"]},{"start":{"row":44,"column":5},"end":{"row":44,"column":6},"action":"insert","lines":["d"]},{"start":{"row":44,"column":6},"end":{"row":44,"column":7},"action":"insert","lines":["i"]},{"start":{"row":44,"column":7},"end":{"row":44,"column":8},"action":"insert","lines":["t"]}],[{"start":{"row":44,"column":4},"end":{"row":44,"column":8},"action":"remove","lines":["edit"],"id":1305},{"start":{"row":44,"column":4},"end":{"row":44,"column":13},"action":"insert","lines":["edit_task"]}],[{"start":{"row":45,"column":4},"end":{"row":45,"column":14},"action":"remove","lines":["the_recipe"],"id":1306},{"start":{"row":45,"column":4},"end":{"row":45,"column":14},"action":"insert","lines":["the_recipe"]}],[{"start":{"row":45,"column":5},"end":{"row":45,"column":14},"action":"remove","lines":["he_recipe"],"id":1307},{"start":{"row":45,"column":4},"end":{"row":45,"column":5},"action":"remove","lines":["t"]}],[{"start":{"row":45,"column":2},"end":{"row":45,"column":11},"action":"insert","lines":["edit_task"],"id":1308}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"remove","lines":[" "],"id":1309},{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"remove","lines":[" "]}],[{"start":{"row":45,"column":55},"end":{"row":45,"column":64},"action":"remove","lines":["recipe_id"],"id":1310}],[{"start":{"row":45,"column":55},"end":{"row":45,"column":64},"action":"insert","lines":["edit_task"],"id":1311}],[{"start":{"row":47,"column":50},"end":{"row":47,"column":60},"action":"remove","lines":["the_recipe"],"id":1312},{"start":{"row":47,"column":50},"end":{"row":47,"column":59},"action":"insert","lines":["edit_task"]}],[{"start":{"row":43,"column":0},"end":{"row":48,"column":53},"action":"remove","lines":["@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","  edit_task=  mongo.db.tasks.find_one({\"_id\": ObjectId(edit_task)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=edit_task,","                           categories=all_categories)"],"id":1313},{"start":{"row":43,"column":0},"end":{"row":48,"column":53},"action":"insert","lines":["@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)"]}],[{"start":{"row":55,"column":4},"end":{"row":55,"column":9},"action":"remove","lines":["tasks"],"id":1314},{"start":{"row":55,"column":4},"end":{"row":55,"column":5},"action":"insert","lines":["r"]},{"start":{"row":55,"column":5},"end":{"row":55,"column":6},"action":"insert","lines":["e"]},{"start":{"row":55,"column":6},"end":{"row":55,"column":7},"action":"insert","lines":["c"]},{"start":{"row":55,"column":7},"end":{"row":55,"column":8},"action":"insert","lines":["i"]},{"start":{"row":55,"column":8},"end":{"row":55,"column":9},"action":"insert","lines":["p"]},{"start":{"row":55,"column":9},"end":{"row":55,"column":10},"action":"insert","lines":["e"]}],[{"start":{"row":55,"column":5},"end":{"row":55,"column":10},"action":"remove","lines":["ecipe"],"id":1315},{"start":{"row":55,"column":4},"end":{"row":55,"column":5},"action":"remove","lines":["r"]}],[{"start":{"row":55,"column":4},"end":{"row":55,"column":5},"action":"insert","lines":["t"],"id":1316},{"start":{"row":55,"column":5},"end":{"row":55,"column":6},"action":"insert","lines":["a"]},{"start":{"row":55,"column":6},"end":{"row":55,"column":7},"action":"insert","lines":["s"]},{"start":{"row":55,"column":7},"end":{"row":55,"column":8},"action":"insert","lines":["k"]},{"start":{"row":55,"column":8},"end":{"row":55,"column":9},"action":"insert","lines":["s"]}],[{"start":{"row":43,"column":0},"end":{"row":48,"column":53},"action":"remove","lines":["@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)"],"id":1317},{"start":{"row":43,"column":0},"end":{"row":48,"column":53},"action":"insert","lines":["@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)"]}],[{"start":{"row":0,"column":0},"end":{"row":77,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"]= 'mongodb+srv://ayaanh221:missayaan221@myfirstcluster-lj4yz.mongodb.net/diary-max?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    ","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","                           ","@app.route('/task_recipe')","def task_recipe():","    return render_template(\"recipes.html\", tasks=mongo.db.tasks.find())","    ","","@app.route('/insert_task', methods=['POST'])","def insert_task():","   ","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","    ","    ","","","","@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)","","   ","   ","@app.route('/update_task/<get_tasks>', methods=[\"POST\"])","def update_task(recipe_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(recipe_id)},","    {","       'recipe_name':request.form.get('recipe_name'),","        'photo_link':request.form.get('photo_link'),","        'cooking_time': request.form.get('cooking_time'),","        'ingredients': request.form.get('ingredients'),","        'method': request.form.get('method'),","        'due_date': request.form.get('due_date'),","        'vegetarian':request.form.get('vegetarian')","    })","    return redirect(url_for('get_tasks'))","","@app.route('/delete_task/<recipe_id>')","def delete_task(recipe_id):"," print(recipe_id, '===debug====')   "," mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})"," return redirect(url_for('get_tasks'))","    ","    ","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":1318},{"start":{"row":0,"column":0},"end":{"row":77,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"]= 'mongodb+srv://ayaanh221:missayaan221@myfirstcluster-lj4yz.mongodb.net/diary-max?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    ","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","                           ","@app.route('/task_recipe')","def task_recipe():","    return render_template(\"recipes.html\", tasks=mongo.db.tasks.find())","    ","","@app.route('/insert_task', methods=['POST'])","def insert_task():","   ","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","    ","    ","","","","@app.route('/edit_task/<recipe_id>')","def edit_task(recipe_id):","    the_recipe=  mongo.db.tasks.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html',  task=the_recipe,","                           categories=all_categories)","","   ","   ","@app.route('/update_task/<get_tasks>', methods=[\"POST\"])","def update_task(recipe_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(recipe_id)},","    {","       'recipe_name':request.form.get('recipe_name'),","        'photo_link':request.form.get('photo_link'),","        'cooking_time': request.form.get('cooking_time'),","        'ingredients': request.form.get('ingredients'),","        'method': request.form.get('method'),","        'due_date': request.form.get('due_date'),","        'vegetarian':request.form.get('vegetarian')","    })","    return redirect(url_for('get_tasks'))","","@app.route('/delete_task/<recipe_id>')","def delete_task(recipe_id):"," print(recipe_id, '===debug====')   "," mongo.db.tasks.remove({'_id': ObjectId(recipe_id)})"," return redirect(url_for('get_tasks'))","    ","    ","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}]]},"ace":{"folds":[],"customSyntax":"python","scrolltop":862,"scrollleft":0,"selection":{"start":{"row":72,"column":4},"end":{"row":72,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":46,"state":"start","mode":"ace/mode/python"}},"timestamp":1581777246814,"hash":"e7cdd11c84522b7afa92b339db19ca1fdd485a0d"}